/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type StatsList = {
  _type: "statsList";
  stats?: Array<{
    number: string;
    label: string;
    _type: "stat";
    _key: string;
  }>;
};

export type ServicesSection = {
  _type: "servicesSection";
  eyebrow: string;
  heading: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "eyebrow" | "normal" | "h1" | "h2" | "h3" | "h4";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      linkType?: "href" | "page";
      href?: string;
      page?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      };
      openInNewTab?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
  } & CallToAction>;
  services: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "service";
  }>;
};

export type PageIntro = {
  _type: "pageIntro";
  centered?: boolean;
  heading: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "eyebrow" | "normal" | "h1" | "h2" | "h3" | "h4";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      linkType?: "href" | "page";
      href?: string;
      page?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      };
      openInNewTab?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
  } & CallToAction>;
};

export type Language = string;

export type InfoSection = {
  _type: "infoSection";
  heading: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "eyebrow" | "normal" | "h1" | "h2" | "h3" | "h4";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      linkType?: "href" | "page";
      href?: string;
      page?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      };
      openInNewTab?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
  } & CallToAction>;
};

export type ImageText = {
  _type: "imageText";
  swap?: boolean;
  image: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  heading: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "eyebrow" | "normal" | "h1" | "h2" | "h3" | "h4";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      linkType?: "href" | "page";
      href?: string;
      page?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      };
      openInNewTab?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
  } & CallToAction>;
};

export type CultureSection = {
  _type: "cultureSection";
  eyebrow?: string;
  heading: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "eyebrow" | "normal" | "h1" | "h2" | "h3" | "h4";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      linkType?: "href" | "page";
      href?: string;
      page?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      };
      openInNewTab?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
  } & CallToAction>;
  values?: Array<{
    text: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "eyebrow" | "normal" | "h1" | "h2" | "h3" | "h4";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        linkType?: "href" | "page";
        href?: string;
        page?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        };
        openInNewTab?: boolean;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
    } & CallToAction>;
    _type: "value";
    _key: string;
  }>;
};

export type ContactSection = {
  _type: "contactSection";
  heading: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "eyebrow" | "normal" | "h1" | "h2" | "h3" | "h4";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      linkType?: "href" | "page";
      href?: string;
      page?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      };
      openInNewTab?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
  } & CallToAction>;
  address?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "eyebrow" | "normal" | "h1" | "h2" | "h3" | "h4";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      linkType?: "href" | "page";
      href?: string;
      page?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      };
      openInNewTab?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
  } & CallToAction>;
};

export type ClientsSection = {
  _type: "clientsSection";
  heading: string;
  clients: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "client";
  }>;
};

export type CallToAction = {
  _type: "callToAction";
  buttonText?: string;
  link?: Link;
};

export type BlockContent = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "eyebrow" | "normal" | "h1" | "h2" | "h3" | "h4";
  listItem?: "bullet" | "number";
  markDefs?: Array<{
    linkType?: "href" | "page";
    href?: string;
    page?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    };
    openInNewTab?: boolean;
    _type: "link";
    _key: string;
  }>;
  level?: number;
  _type: "block";
  _key: string;
} | {
  _key: string;
} & CallToAction>;

export type Client = {
  _id: string;
  _type: "client";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  url?: string;
  testimonial?: string;
};

export type Service = {
  _id: string;
  _type: "service";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  description: string;
  media: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "media";
  };
  page: Link;
};

export type Media = {
  _type: "media";
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
  };
  media?: unknown;
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  alt?: string;
};

export type Settings = {
  _id: string;
  _type: "settings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  ogImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    metadataBase?: string;
    _type: "image";
  };
  contact?: {
    email: string;
    phone: string;
  };
  businessAddresses: BlockContent;
  address?: {
    addressLine: string;
    latitude?: number;
    longitude?: number;
  };
  openingHours?: Array<{
    isOpen?: boolean;
    day: "Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday";
    open?: string;
    close?: string;
    _key: string;
  }>;
  tracking?: Array<string | string | string>;
  socials?: Array<{
    platform: "facebook" | "instagram" | "twitter" | "linkedin" | "youtube" | "tiktok" | "pinterest" | "reddit" | "snapchat" | "twitch" | "discord" | "telegram" | "mastodon" | "threads" | "x" | "website";
    url: string;
    _key: string;
  }>;
};

export type SanityVideo = {
  _type: "sanity.video";
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sanity.videoAsset";
  };
  media?: unknown;
};

export type SanityVideoAsset = {
  _id: string;
  _type: "sanity.videoAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  creditLine?: string;
  metadata?: SanityVideoMetadata;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
};

export type SanityVideoMetadata = {
  _type: "sanity.videoMetadata";
  duration?: number;
  framerate?: number;
  aspectRatio?: number;
  hasAudio?: boolean;
  codec?: string;
  bitrate?: number;
};

export type TranslationMetadata = {
  _id: string;
  _type: "translation.metadata";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  translations?: Array<{
    _key: string;
  } & InternationalizedArrayReferenceValue>;
  schemaTypes?: Array<string>;
};

export type InternationalizedArrayReferenceValue = {
  _type: "internationalizedArrayReferenceValue";
  value?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "footer";
  };
};

export type Footer = {
  _id: string;
  _type: "footer";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  language?: Language;
  navigationSections?: Array<{
    title: string;
    links?: Array<{
      label: string;
      link: Link;
      _key: string;
    }>;
    _type: "navigationSection";
    _key: string;
  }>;
  contactSection?: BlockContent;
};

export type Header = {
  _id: string;
  _type: "header";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  language?: Language;
  navigationItems?: Array<{
    label: string;
    link: Link;
    _key: string;
  }>;
  ctaButton?: {
    label: string;
    link: Link;
  };
};

export type Link = {
  _type: "link";
  linkType?: "href" | "page";
  href?: string;
  page?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  };
  openInNewTab?: boolean;
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  language?: Language;
  title: string;
  slug: {
    current: string;
    source?: string;
    _type: "languageSlug";
  };
  pageBuilder?: Array<{
    _key: string;
  } & PageIntro | {
    _key: string;
  } & InfoSection | {
    _key: string;
  } & ContactSection | {
    _key: string;
  } & ClientsSection | {
    _key: string;
  } & ServicesSection | {
    _key: string;
  } & CultureSection | {
    _key: string;
  } & StatsList | {
    _key: string;
  } & ImageText>;
  seo?: Seo;
};

export type Seo = {
  _type: "seo";
  metaTitle: string;
  metaDescription: string;
  ogTitle?: string;
  ogDescription?: string;
  ogImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  twitterCard?: "summary" | "summary_large_image";
  noIndex?: boolean;
};

export type LanguageSlug = Slug;

export type InternationalizedArrayReference = Array<{
  _key: string;
} & InternationalizedArrayReferenceValue>;

export type SanityAssistInstructionTask = {
  _type: "sanity.assist.instructionTask";
  path?: string;
  instructionKey?: string;
  started?: string;
  updated?: string;
  info?: string;
};

export type SanityAssistTaskStatus = {
  _type: "sanity.assist.task.status";
  tasks?: Array<{
    _key: string;
  } & SanityAssistInstructionTask>;
};

export type SanityAssistSchemaTypeAnnotations = {
  _type: "sanity.assist.schemaType.annotations";
  title?: string;
  fields?: Array<{
    _key: string;
  } & SanityAssistSchemaTypeField>;
};

export type SanityAssistOutputType = {
  _type: "sanity.assist.output.type";
  type?: string;
};

export type SanityAssistOutputField = {
  _type: "sanity.assist.output.field";
  path?: string;
};

export type SanityAssistInstructionContext = {
  _type: "sanity.assist.instruction.context";
  reference: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "assist.instruction.context";
  };
};

export type AssistInstructionContext = {
  _id: string;
  _type: "assist.instruction.context";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  context?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: null;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type SanityAssistInstructionUserInput = {
  _type: "sanity.assist.instruction.userInput";
  message: string;
  description?: string;
};

export type SanityAssistInstructionPrompt = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  } | {
    _key: string;
  } & SanityAssistInstructionFieldRef | {
    _key: string;
  } & SanityAssistInstructionContext | {
    _key: string;
  } & SanityAssistInstructionUserInput>;
  style?: "normal";
  listItem?: never;
  markDefs?: null;
  level?: number;
  _type: "block";
  _key: string;
}>;

export type SanityAssistInstructionFieldRef = {
  _type: "sanity.assist.instruction.fieldRef";
  path?: string;
};

export type SanityAssistInstruction = {
  _type: "sanity.assist.instruction";
  prompt?: SanityAssistInstructionPrompt;
  icon?: string;
  title?: string;
  userId?: string;
  createdById?: string;
  output?: Array<{
    _key: string;
  } & SanityAssistOutputField | {
    _key: string;
  } & SanityAssistOutputType>;
};

export type SanityAssistSchemaTypeField = {
  _type: "sanity.assist.schemaType.field";
  path?: string;
  instructions?: Array<{
    _key: string;
  } & SanityAssistInstruction>;
};

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes = StatsList | ServicesSection | PageIntro | Language | InfoSection | ImageText | CultureSection | ContactSection | ClientsSection | CallToAction | BlockContent | Client | Service | Media | Settings | SanityVideo | SanityVideoAsset | SanityVideoMetadata | TranslationMetadata | InternationalizedArrayReferenceValue | Footer | Header | Link | Page | Seo | LanguageSlug | InternationalizedArrayReference | SanityAssistInstructionTask | SanityAssistTaskStatus | SanityAssistSchemaTypeAnnotations | SanityAssistOutputType | SanityAssistOutputField | SanityAssistInstructionContext | AssistInstructionContext | SanityAssistInstructionUserInput | SanityAssistInstructionPrompt | SanityAssistInstructionFieldRef | SanityAssistInstruction | SanityAssistSchemaTypeField | SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityImageHotspot | SanityImageCrop | SanityFileAsset | SanityImageAsset | SanityImageMetadata | Geopoint | Slug | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./sanity/lib/queries.ts
// Variable: settingsQuery
// Query: *[_type == "settings"][0]
export type SettingsQueryResult = {
  _id: string;
  _type: "settings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  ogImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    metadataBase?: string;
    _type: "image";
  };
  contact?: {
    email: string;
    phone: string;
  };
  businessAddresses: BlockContent;
  address?: {
    addressLine: string;
    latitude?: number;
    longitude?: number;
  };
  openingHours?: Array<{
    isOpen?: boolean;
    day: "Friday" | "Monday" | "Saturday" | "Sunday" | "Thursday" | "Tuesday" | "Wednesday";
    open?: string;
    close?: string;
    _key: string;
  }>;
  tracking?: Array<string>;
  socials?: Array<{
    platform: "discord" | "facebook" | "instagram" | "linkedin" | "mastodon" | "pinterest" | "reddit" | "snapchat" | "telegram" | "threads" | "tiktok" | "twitch" | "twitter" | "website" | "x" | "youtube";
    url: string;
    _key: string;
  }>;
} | null;
// Variable: headerQuery
// Query: *[_type == "header" && language == $language][0]{  _id,  _type,  language,  ctaButton {    label,    link {      ...,      "page": page->slug.current,    }  },  navigationItems[] {    label,    link {      ...,      "page": page->slug.current,    }  }}
export type HeaderQueryResult = {
  _id: string;
  _type: "header";
  language: Language | null;
  ctaButton: {
    label: string;
    link: {
      _type: "link";
      linkType?: "href" | "page";
      href?: string;
      page: string | null;
      openInNewTab?: boolean;
    };
  } | null;
  navigationItems: Array<{
    label: string;
    link: {
      _type: "link";
      linkType?: "href" | "page";
      href?: string;
      page: string | null;
      openInNewTab?: boolean;
    };
  }> | null;
} | null;
// Variable: footerQuery
// Query: *[_type == "footer" && language == $language][0]{  _id,  _type,  language,  navigationSections[] {    ...,    links[] {      ...,      link {        ...,        "page": page->slug.current,      }    }  },  contactSection[]{      ...,  _type == "cta" => {    ...,    link {      ...,      "page": page->slug.current,    }  },  markDefs[]{    ...,      _type == "link" => {    "page": page->slug.current,  }  }  }}
export type FooterQueryResult = {
  _id: string;
  _type: "footer";
  language: Language | null;
  navigationSections: Array<{
    title: string;
    links: Array<{
      label: string;
      link: {
        _type: "link";
        linkType?: "href" | "page";
        href?: string;
        page: string | null;
        openInNewTab?: boolean;
      };
      _key: string;
    }> | null;
    _type: "navigationSection";
    _key: string;
  }> | null;
  contactSection: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "eyebrow" | "h1" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet" | "number";
    markDefs: Array<{
      linkType?: "href" | "page";
      href?: string;
      page: string | null;
      openInNewTab?: boolean;
      _type: "link";
      _key: string;
    }> | null;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
    _type: "callToAction";
    buttonText?: string;
    link?: Link;
    markDefs: null;
  }> | null;
} | null;
// Variable: getPageQuery
// Query: *[_type == 'page' && slug.current == $slug && language == $language][0]{      _id,  _type,  language,  title,  slug,  "pageBuilder": pageBuilder[]{    ...,      _type == "contactSection" => {    heading[]{        ...,  _type == "cta" => {    ...,    link {      ...,      "page": page->slug.current,    }  },  markDefs[]{    ...,      _type == "link" => {    "page": page->slug.current,  }  }    },    address[]{        ...,  _type == "cta" => {    ...,    link {      ...,      "page": page->slug.current,    }  },  markDefs[]{    ...,      _type == "link" => {    "page": page->slug.current,  }  }    }  },      _type == "clientsSection" => {    heading,    clients[]-> {      _id,      name,      logo {        ...,          "url": asset->url,      }    }  },      _type == "servicesSection" => {    eyebrow,    heading[]{        ...,  _type == "cta" => {    ...,    link {      ...,      "page": page->slug.current,    }  },  markDefs[]{    ...,      _type == "link" => {    "page": page->slug.current,  }  }    },    services[]-> {      _id,      title,      description,      page {        ...,          _type == "link" => {    "page": page->slug.current,  }      },      media {        ...,          "url": asset->url,        "metadata": asset->metadata,        "dimensions": asset->metadata.dimensions      }    }  },    _type == "imageText" => {        heading[]{      ...,  _type == "cta" => {    ...,    link {      ...,      "page": page->slug.current,    }  },  markDefs[]{    ...,      _type == "link" => {    "page": page->slug.current,  }  }  },  image {    ...,    "url": asset->url,    "metadata": asset->metadata,    "dimensions": asset->metadata.dimensions  }    },    _type == "callToAction" => {        link {    ...,      _type == "link" => {    "page": page->slug.current,  }  },    },    _type == "infoSection" => {      content[]{        ...,        markDefs[]{          ...,            _type == "link" => {    "page": page->slug.current,  }        }      }    },  },  seo,    "translations": *[_type == "translation.metadata" && references(^._id)].translations[].value->{        _id,  _type,  language,  title,  slug,  "pageBuilder": pageBuilder[]{    ...,      _type == "contactSection" => {    heading[]{        ...,  _type == "cta" => {    ...,    link {      ...,      "page": page->slug.current,    }  },  markDefs[]{    ...,      _type == "link" => {    "page": page->slug.current,  }  }    },    address[]{        ...,  _type == "cta" => {    ...,    link {      ...,      "page": page->slug.current,    }  },  markDefs[]{    ...,      _type == "link" => {    "page": page->slug.current,  }  }    }  },      _type == "clientsSection" => {    heading,    clients[]-> {      _id,      name,      logo {        ...,          "url": asset->url,      }    }  },      _type == "servicesSection" => {    eyebrow,    heading[]{        ...,  _type == "cta" => {    ...,    link {      ...,      "page": page->slug.current,    }  },  markDefs[]{    ...,      _type == "link" => {    "page": page->slug.current,  }  }    },    services[]-> {      _id,      title,      description,      page {        ...,          _type == "link" => {    "page": page->slug.current,  }      },      media {        ...,          "url": asset->url,        "metadata": asset->metadata,        "dimensions": asset->metadata.dimensions      }    }  },    _type == "imageText" => {        heading[]{      ...,  _type == "cta" => {    ...,    link {      ...,      "page": page->slug.current,    }  },  markDefs[]{    ...,      _type == "link" => {    "page": page->slug.current,  }  }  },  image {    ...,    "url": asset->url,    "metadata": asset->metadata,    "dimensions": asset->metadata.dimensions  }    },    _type == "callToAction" => {        link {    ...,      _type == "link" => {    "page": page->slug.current,  }  },    },    _type == "infoSection" => {      content[]{        ...,        markDefs[]{          ...,            _type == "link" => {    "page": page->slug.current,  }        }      }    },  },  seo    }  }
export type GetPageQueryResult = {
  _id: string;
  _type: "page";
  language: Language | null;
  title: string;
  slug: {
    current: string;
    source?: string;
    _type: "languageSlug";
  };
  pageBuilder: Array<{
    _key: string;
    _type: "clientsSection";
    heading: string;
    clients: Array<{
      _id: string;
      name: string | null;
      logo: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        url: string | null;
      } | null;
    }>;
  } | {
    _key: string;
    _type: "contactSection";
    heading: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "eyebrow" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        linkType?: "href" | "page";
        href?: string;
        page: string | null;
        openInNewTab?: boolean;
        _type: "link";
        _key: string;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "callToAction";
      buttonText?: string;
      link?: Link;
      markDefs: null;
    }>;
    address: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "eyebrow" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        linkType?: "href" | "page";
        href?: string;
        page: string | null;
        openInNewTab?: boolean;
        _type: "link";
        _key: string;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "callToAction";
      buttonText?: string;
      link?: Link;
      markDefs: null;
    }> | null;
  } | {
    _key: string;
    _type: "cultureSection";
    eyebrow?: string;
    heading: Array<{
      _key: string;
    } & CallToAction | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "eyebrow" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        linkType?: "href" | "page";
        href?: string;
        page?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        };
        openInNewTab?: boolean;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    values?: Array<{
      text: Array<{
        _key: string;
      } & CallToAction | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "eyebrow" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          linkType?: "href" | "page";
          href?: string;
          page?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "page";
          };
          openInNewTab?: boolean;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }>;
      _type: "value";
      _key: string;
    }>;
  } | {
    _key: string;
    _type: "imageText";
    swap?: boolean;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      url: string | null;
      metadata: SanityImageMetadata | null;
      dimensions: SanityImageDimensions | null;
    };
    heading: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "eyebrow" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        linkType?: "href" | "page";
        href?: string;
        page: string | null;
        openInNewTab?: boolean;
        _type: "link";
        _key: string;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "callToAction";
      buttonText?: string;
      link?: Link;
      markDefs: null;
    }>;
  } | {
    _key: string;
    _type: "infoSection";
    heading: Array<{
      _key: string;
    } & CallToAction | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "eyebrow" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        linkType?: "href" | "page";
        href?: string;
        page?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        };
        openInNewTab?: boolean;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    content: null;
  } | {
    _key: string;
    _type: "pageIntro";
    centered?: boolean;
    heading: Array<{
      _key: string;
    } & CallToAction | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "eyebrow" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        linkType?: "href" | "page";
        href?: string;
        page?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        };
        openInNewTab?: boolean;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
  } | {
    _key: string;
    _type: "servicesSection";
    eyebrow: string;
    heading: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "eyebrow" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        linkType?: "href" | "page";
        href?: string;
        page: string | null;
        openInNewTab?: boolean;
        _type: "link";
        _key: string;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "callToAction";
      buttonText?: string;
      link?: Link;
      markDefs: null;
    }>;
    services: Array<{
      _id: string;
      title: string;
      description: string;
      page: {
        _type: "link";
        linkType?: "href" | "page";
        href?: string;
        page: string | null;
        openInNewTab?: boolean;
      };
      media: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "media";
        url: string | null;
        metadata: SanityImageMetadata | null;
        dimensions: SanityImageDimensions | null;
      };
    }>;
  } | {
    _key: string;
    _type: "statsList";
    stats?: Array<{
      number: string;
      label: string;
      _type: "stat";
      _key: string;
    }>;
  }> | null;
  seo: Seo | null;
  translations: Array<{
    _id: string;
    _type: "footer";
    language: Language | null;
    title: null;
    slug: null;
    pageBuilder: null;
    seo: null;
  } | {
    _id: string;
    _type: "header";
    language: Language | null;
    title: null;
    slug: null;
    pageBuilder: null;
    seo: null;
  } | {
    _id: string;
    _type: "page";
    language: Language | null;
    title: string;
    slug: {
      current: string;
      source?: string;
      _type: "languageSlug";
    };
    pageBuilder: Array<{
      _key: string;
      _type: "clientsSection";
      heading: string;
      clients: Array<{
        _id: string;
        name: string | null;
        logo: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          url: string | null;
        } | null;
      }>;
    } | {
      _key: string;
      _type: "contactSection";
      heading: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "eyebrow" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<{
          linkType?: "href" | "page";
          href?: string;
          page: string | null;
          openInNewTab?: boolean;
          _type: "link";
          _key: string;
        }> | null;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "callToAction";
        buttonText?: string;
        link?: Link;
        markDefs: null;
      }>;
      address: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "eyebrow" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<{
          linkType?: "href" | "page";
          href?: string;
          page: string | null;
          openInNewTab?: boolean;
          _type: "link";
          _key: string;
        }> | null;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "callToAction";
        buttonText?: string;
        link?: Link;
        markDefs: null;
      }> | null;
    } | {
      _key: string;
      _type: "cultureSection";
      eyebrow?: string;
      heading: Array<{
        _key: string;
      } & CallToAction | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "eyebrow" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          linkType?: "href" | "page";
          href?: string;
          page?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "page";
          };
          openInNewTab?: boolean;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }>;
      values?: Array<{
        text: Array<{
          _key: string;
        } & CallToAction | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "eyebrow" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            linkType?: "href" | "page";
            href?: string;
            page?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "page";
            };
            openInNewTab?: boolean;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
        _type: "value";
        _key: string;
      }>;
    } | {
      _key: string;
      _type: "imageText";
      swap?: boolean;
      image: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        url: string | null;
        metadata: SanityImageMetadata | null;
        dimensions: SanityImageDimensions | null;
      };
      heading: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "eyebrow" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<{
          linkType?: "href" | "page";
          href?: string;
          page: string | null;
          openInNewTab?: boolean;
          _type: "link";
          _key: string;
        }> | null;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "callToAction";
        buttonText?: string;
        link?: Link;
        markDefs: null;
      }>;
    } | {
      _key: string;
      _type: "infoSection";
      heading: Array<{
        _key: string;
      } & CallToAction | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "eyebrow" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          linkType?: "href" | "page";
          href?: string;
          page?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "page";
          };
          openInNewTab?: boolean;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }>;
      content: null;
    } | {
      _key: string;
      _type: "pageIntro";
      centered?: boolean;
      heading: Array<{
        _key: string;
      } & CallToAction | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "eyebrow" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          linkType?: "href" | "page";
          href?: string;
          page?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "page";
          };
          openInNewTab?: boolean;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }>;
    } | {
      _key: string;
      _type: "servicesSection";
      eyebrow: string;
      heading: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "eyebrow" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<{
          linkType?: "href" | "page";
          href?: string;
          page: string | null;
          openInNewTab?: boolean;
          _type: "link";
          _key: string;
        }> | null;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "callToAction";
        buttonText?: string;
        link?: Link;
        markDefs: null;
      }>;
      services: Array<{
        _id: string;
        title: string;
        description: string;
        page: {
          _type: "link";
          linkType?: "href" | "page";
          href?: string;
          page: string | null;
          openInNewTab?: boolean;
        };
        media: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "media";
          url: string | null;
          metadata: SanityImageMetadata | null;
          dimensions: SanityImageDimensions | null;
        };
      }>;
    } | {
      _key: string;
      _type: "statsList";
      stats?: Array<{
        number: string;
        label: string;
        _type: "stat";
        _key: string;
      }>;
    }> | null;
    seo: Seo | null;
  } | null>;
} | null;
// Variable: sitemapData
// Query: *[_type == "page" && defined(slug.current) && slug.current != "/"]{    "slug": slug.current,    language  }
export type SitemapDataResult = Array<{
  slug: string;
  language: Language | null;
}>;
// Variable: pagesSlugs
// Query: *[_type == "page" && defined(slug.current)]  {"slug": slug.current}
export type PagesSlugsResult = Array<{
  slug: string;
}>;
// Variable: pagesSlugsForStaticGeneration
// Query: *[_type == "page" && defined(slug.current) && slug.current != "/"]{    "slug": slug.current,    language  }
export type PagesSlugsForStaticGenerationResult = Array<{
  slug: string;
  language: Language | null;
}>;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "*[_type == \"settings\"][0]": SettingsQueryResult;
    "*[_type == \"header\" && language == $language][0]{\n  _id,\n  _type,\n  language,\n  ctaButton {\n    label,\n    link {\n      ...,\n      \"page\": page->slug.current,\n    }\n  },\n  navigationItems[] {\n    label,\n    link {\n      ...,\n      \"page\": page->slug.current,\n    }\n  }\n}": HeaderQueryResult;
    "*[_type == \"footer\" && language == $language][0]{\n  _id,\n  _type,\n  language,\n  navigationSections[] {\n    ...,\n    links[] {\n      ...,\n      link {\n        ...,\n        \"page\": page->slug.current,\n      }\n    }\n  },\n  contactSection[]{\n    \n  ...,\n  _type == \"cta\" => {\n    ...,\n    link {\n      ...,\n      \"page\": page->slug.current,\n    }\n  },\n  markDefs[]{\n    ...,\n    \n  _type == \"link\" => {\n    \"page\": page->slug.current,\n  }\n\n  }\n\n  }\n}": FooterQueryResult;
    "\n  *[_type == 'page' && slug.current == $slug && language == $language][0]{\n    \n  _id,\n  _type,\n  language,\n  title,\n  slug,\n  \"pageBuilder\": pageBuilder[]{\n    ...,\n    \n  _type == \"contactSection\" => {\n    heading[]{\n      \n  ...,\n  _type == \"cta\" => {\n    ...,\n    link {\n      ...,\n      \"page\": page->slug.current,\n    }\n  },\n  markDefs[]{\n    ...,\n    \n  _type == \"link\" => {\n    \"page\": page->slug.current,\n  }\n\n  }\n\n    },\n    address[]{\n      \n  ...,\n  _type == \"cta\" => {\n    ...,\n    link {\n      ...,\n      \"page\": page->slug.current,\n    }\n  },\n  markDefs[]{\n    ...,\n    \n  _type == \"link\" => {\n    \"page\": page->slug.current,\n  }\n\n  }\n\n    }\n  }\n,\n    \n  _type == \"clientsSection\" => {\n    heading,\n    clients[]-> {\n      _id,\n      name,\n      logo {\n        ...,\n        \n  \"url\": asset->url,\n\n      }\n    }\n  }\n,\n    \n  _type == \"servicesSection\" => {\n    eyebrow,\n    heading[]{\n      \n  ...,\n  _type == \"cta\" => {\n    ...,\n    link {\n      ...,\n      \"page\": page->slug.current,\n    }\n  },\n  markDefs[]{\n    ...,\n    \n  _type == \"link\" => {\n    \"page\": page->slug.current,\n  }\n\n  }\n\n    },\n    services[]-> {\n      _id,\n      title,\n      description,\n      page {\n        ...,\n        \n  _type == \"link\" => {\n    \"page\": page->slug.current,\n  }\n\n      },\n      media {\n        ...,\n        \n  \"url\": asset->url,\n\n        \"metadata\": asset->metadata,\n        \"dimensions\": asset->metadata.dimensions\n      }\n    }\n  }\n,\n    _type == \"imageText\" => {\n      \n  heading[]{\n    \n  ...,\n  _type == \"cta\" => {\n    ...,\n    link {\n      ...,\n      \"page\": page->slug.current,\n    }\n  },\n  markDefs[]{\n    ...,\n    \n  _type == \"link\" => {\n    \"page\": page->slug.current,\n  }\n\n  }\n\n  },\n  image {\n    ...,\n    \"url\": asset->url,\n    \"metadata\": asset->metadata,\n    \"dimensions\": asset->metadata.dimensions\n  }\n\n    },\n    _type == \"callToAction\" => {\n      \n  link {\n    ...,\n    \n  _type == \"link\" => {\n    \"page\": page->slug.current,\n  }\n\n  }\n,\n    },\n    _type == \"infoSection\" => {\n      content[]{\n        ...,\n        markDefs[]{\n          ...,\n          \n  _type == \"link\" => {\n    \"page\": page->slug.current,\n  }\n\n        }\n      }\n    },\n  },\n  seo\n,\n    \"translations\": *[_type == \"translation.metadata\" && references(^._id)].translations[].value->{\n      \n  _id,\n  _type,\n  language,\n  title,\n  slug,\n  \"pageBuilder\": pageBuilder[]{\n    ...,\n    \n  _type == \"contactSection\" => {\n    heading[]{\n      \n  ...,\n  _type == \"cta\" => {\n    ...,\n    link {\n      ...,\n      \"page\": page->slug.current,\n    }\n  },\n  markDefs[]{\n    ...,\n    \n  _type == \"link\" => {\n    \"page\": page->slug.current,\n  }\n\n  }\n\n    },\n    address[]{\n      \n  ...,\n  _type == \"cta\" => {\n    ...,\n    link {\n      ...,\n      \"page\": page->slug.current,\n    }\n  },\n  markDefs[]{\n    ...,\n    \n  _type == \"link\" => {\n    \"page\": page->slug.current,\n  }\n\n  }\n\n    }\n  }\n,\n    \n  _type == \"clientsSection\" => {\n    heading,\n    clients[]-> {\n      _id,\n      name,\n      logo {\n        ...,\n        \n  \"url\": asset->url,\n\n      }\n    }\n  }\n,\n    \n  _type == \"servicesSection\" => {\n    eyebrow,\n    heading[]{\n      \n  ...,\n  _type == \"cta\" => {\n    ...,\n    link {\n      ...,\n      \"page\": page->slug.current,\n    }\n  },\n  markDefs[]{\n    ...,\n    \n  _type == \"link\" => {\n    \"page\": page->slug.current,\n  }\n\n  }\n\n    },\n    services[]-> {\n      _id,\n      title,\n      description,\n      page {\n        ...,\n        \n  _type == \"link\" => {\n    \"page\": page->slug.current,\n  }\n\n      },\n      media {\n        ...,\n        \n  \"url\": asset->url,\n\n        \"metadata\": asset->metadata,\n        \"dimensions\": asset->metadata.dimensions\n      }\n    }\n  }\n,\n    _type == \"imageText\" => {\n      \n  heading[]{\n    \n  ...,\n  _type == \"cta\" => {\n    ...,\n    link {\n      ...,\n      \"page\": page->slug.current,\n    }\n  },\n  markDefs[]{\n    ...,\n    \n  _type == \"link\" => {\n    \"page\": page->slug.current,\n  }\n\n  }\n\n  },\n  image {\n    ...,\n    \"url\": asset->url,\n    \"metadata\": asset->metadata,\n    \"dimensions\": asset->metadata.dimensions\n  }\n\n    },\n    _type == \"callToAction\" => {\n      \n  link {\n    ...,\n    \n  _type == \"link\" => {\n    \"page\": page->slug.current,\n  }\n\n  }\n,\n    },\n    _type == \"infoSection\" => {\n      content[]{\n        ...,\n        markDefs[]{\n          ...,\n          \n  _type == \"link\" => {\n    \"page\": page->slug.current,\n  }\n\n        }\n      }\n    },\n  },\n  seo\n\n    }\n  }\n": GetPageQueryResult;
    "\n  *[_type == \"page\" && defined(slug.current) && slug.current != \"/\"]{\n    \"slug\": slug.current,\n    language\n  }\n": SitemapDataResult | PagesSlugsForStaticGenerationResult;
    "\n  *[_type == \"page\" && defined(slug.current)]\n  {\"slug\": slug.current}\n": PagesSlugsResult;
  }
}
